info:
    dependencies:
        mokey: ${integrations.mokey.url}
        boober: ${integrations.boober.url}
        docker: ${integrations.docker-registry.url}
        unclematt: ${integrations.unclematt.url}
        cantus: ${integrations.cantus.url}

spring:
    application:
        name: gobo
    profiles:
        active: local
    codec:
        max-in-memory-size: -1 # unlimited
    zipkin:
        enabled: false
    datasource:
        url: jdbc:h2:mem:gobo;DB_CLOSE_ON_EXIT=false

graphql:
    packages: "no.skatteetaten.aurora.gobo.graphql"

aurora:
    webflux:
        header:
            filter:
                enabled: true
            webclient:
                interceptor:
                    enabled: true
    security:
        allow-anonymous: true

management:
    endpoints:
        web:
            exposure:
                include: info,health,prometheus,env,loggers,metrics,liveness
    metrics:
        distribution:
            minimum-expected-value:
                "http.client.requests": "100"
                "http.server.requests": "100"
            maximum-expected-value:
                "http.client.requests": "30000"
                "http.server.requests": "30000"

kubernetes:
    webclient:
        metrics: true
        maxLifeTime: 300000

integrations:
    mokey:
        url: http://mokey
    boober:
        url: http://boober
    unclematt:
        url: http://unclematt-aurora-daemons.utv.paas.skead.no
    cantus:
        url: http://cantus
    phil:
        url: http://phil
    docker:
        cluster:
            url: docker-registry.default.svc:5000
            https: false
            auth: Bearer
            readOnly: true
            enabled: true
        old:
            url: docker-registry.aurora.sits.no:5000
            guiUrlPattern: http://uil0paas-utv-registry01.skead.no:9090/tag/@group@/@name@/
            https: true
            auth: None
            readOnly: false
            enabled: true
        nexus-pull:
            url: container-registry-internal-private-pull.aurora.skead.no:443
            guiUrlPattern: https://container-nexus.sits.no/#browse/search/docker=attributes.docker.imageName%3D@group@%2F@name@%20AND%20attributes.docker.imageTag%3D
            https: true
            auth: None
            readOnly: true
            enabled: true
        nexus-pull-public:
            url: container-registry-internal-public-pull.aurora.skead.no:443
            guiUrlPattern: https://container-nexus.sits.no/#browse/search/docker=attributes.docker.imageName%3D@group@%2F@name@%20AND%20attributes.docker.imageTag%3D
            https: true
            auth: None
            readOnly: true
            enabled: true
        nexus-release:
            url: container-registry-internal-release.aurora.skead.no:443
            guiUrlPattern: https://container-nexus.sits.no/#browse/search/docker=attributes.docker.imageName%3D@group@%2F@name@%20AND%20attributes.docker.imageTag%3D
            https: true
            auth: Basic
            readOnly: false

logging:
    level:
        org:
            jboss: WARN
            hibernate: WARN
            springframework: WARN
            apache: WARN
boober:
    metrics:
        enabled: false

---
spring:
    config:
        activate:
            on-profile: openshift

aurora:
    token:
        location: /u01/secrets/app/aurora-token/token
    openshift:
        admin:
            username: ${GOBO_OPENSHIFT_ADMIN_USERNAME:-user}
            password: ${GOBO_OPENSHIFT_ADMIN_PASSWORD:-password}

logging.level.com.expediagroup.graphql.server.spring: WARN
