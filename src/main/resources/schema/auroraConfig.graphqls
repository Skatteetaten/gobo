type AuroraConfig{
    name: String!
    ref: String!
    resolvedRef: String!
    files(types:[AuroraConfigFileType!], fileName:[String!]): [AuroraConfigFile!]
    applicationDeploymentSpec(applicationDeploymentRefs:[ApplicationDeploymentRef!]!) : [ApplicationDeploymentSpec]
}

type ApplicationDeploymentSpec {
    rawJsonValueWithDefaults: String!
    cluster: String!
    environment: String!
    application: String!
    version: String!
    replicas:String!
    paused:Boolean!
    type: String!
    deployStrategy:String!
    releaseTo: String
}


input NewAuroraConfigFileInput {
    auroraConfigName: String!,
    auroraConfigReference:String,
    fileName:String!,
    contents:String!
}

input UpdateAuroraConfigFileInput {
    auroraConfigName: String!,
    auroraConfigReference:String,
    fileName:String!,
    contents:String!,
    existingHash:String!
}

type AuroraConfigFile {
    name: String!
    type: AuroraConfigFileType!
    contents: String!
    contentHash: String!
}

enum AuroraConfigFileType  {
    GLOBAL,
    BASE,
    ENV,
    APP
}

type AuroraConfigFileValidationResponse {
    message: String!
    success: Boolean!
    file: AuroraConfigFile
}


