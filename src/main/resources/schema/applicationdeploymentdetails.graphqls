type GitInfo {
  commitId: String
  commitTime: DateTime
}

type ImageDetails {
  imageBuildTime: DateTime
  digest: String
  dockerImageTagReference: String
  isLatestDigest:Boolean
}

type PodResource {
  name: String
  phase: String
  deployTag: String
  latestDeployTag: Boolean
  replicaName:String
  latestReplicaName:Boolean
  startTime: DateTime
  links(names: [String]): [Link]
  containers: [ContainerResource]
  managementResponses: ManagementResponses
  status: String
  ready: Boolean
  restartCount: Int
}

type ContainerResource {
  name:String,
  state:String,
  image:String,
  restartCount:Int
  ready:Boolean
}

type ManagementResponses {
  links: ManagementEndpointResponse!
  health: ManagementEndpointResponse
  info: ManagementEndpointResponse
  env: ManagementEndpointResponse
}

type ManagementEndpointResponse {
  hasResponse: Boolean!
  textResponse: String
  createdAt: DateTime!
  httpCode: Int
  url: String
  error: ManagementEndpointError
}

type ManagementEndpointError {
  code: String!
  message: String
}

type Link {
  name: String
  url: URL
}

type DeploymentSpec {
    jsonRepresentation: String
}

type DeploymentSpecs {
    current: DeploymentSpec
    deployed: DeploymentSpec
}

type ApplicationDeploymentDetails {
  buildTime: String
  gitInfo: GitInfo
  imageDetails: ImageDetails
  podResources: [PodResource]
  deploymentSpecs: DeploymentSpecs
  deployDetails:DeployDetailsResource
}

type DeployDetailsResource{
  targetReplicas:Int,
  availableReplicas:Int,
  deployment:String,
  phase:String,
  deployTag:String,
  paused:Boolean!
}